{"version":3,"sources":["helpers/session.js","components/user/login.js","components/user/feed.js","components/user/register.js","routes.js","serviceWorker.js","index.js"],"names":["sessionHelper","isLoggedIn","sessionStorage","getItem","login","setItem","logout","removeItem","SignIn","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","redirectToReferrer","handleSubmit","bind","assertThisInitialized","event","_this2","preventDefault","data","FormData","target","fetch","method","body","then","response","status","setState","alert","classes","react_default","a","createElement","es_Redirect","to","className","main","CssBaseline_default","Paper_default","paper","Avatar_default","avatar","Typography_default","component","variant","form","onSubmit","FormControl_default","margin","required","fullWidth","InputLabel_default","htmlFor","Input_default","id","name","autoComplete","autoFocus","type","FormControlLabel_default","control","Checkbox_default","value","color","label","Button_default","submit","React","Component","withStyles","theme","defineProperty","width","display","marginLeft","spacing","unit","marginRight","breakpoints","up","marginTop","flexDirection","alignItems","padding","concat","backgroundColor","palette","secondary","LogoutButton","withRouter","_ref","history","onClick","e","push","Feed","Register","PrivateRoute","rest","objectWithoutProperties","Route","assign","render","Redirect","pathname","from","location","Routes","BrowserRouter","exact","path","Boolean","window","hostname","match","ReactDOM","routes","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.fdea2dc7.chunk.js","sourcesContent":["export const sessionHelper = {\r\n  isLoggedIn() {\r\n    return sessionStorage.getItem('isLoggedIn');\r\n  },\r\n  login() {\r\n    sessionStorage.setItem('isLoggedIn', true);\r\n  },\r\n  logout() {\r\n    sessionStorage.removeItem('isLoggedIn');\r\n  }\r\n};\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Input from '@material-ui/core/Input';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport withStyles from '@material-ui/core/styles/withStyles';\r\n\r\nimport { Redirect } from 'react-router'\r\nimport { sessionHelper } from '../../helpers/session'\r\n\r\nconst styles = theme => ({\r\n  main: {\r\n    width: 'auto',\r\n    display: 'block', // Fix IE 11 issue.\r\n    marginLeft: theme.spacing.unit * 3,\r\n    marginRight: theme.spacing.unit * 3,\r\n    [theme.breakpoints.up(400 + theme.spacing.unit * 3 * 2)]: {\r\n      width: 400,\r\n      marginLeft: 'auto',\r\n      marginRight: 'auto',\r\n    },\r\n  },\r\n  paper: {\r\n    marginTop: theme.spacing.unit * 8,\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n    padding: `${theme.spacing.unit * 2}px ${theme.spacing.unit * 3}px ${theme.spacing.unit * 3}px`,\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing.unit,\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  form: {\r\n    width: '100%', // Fix IE 11 issue.\r\n    marginTop: theme.spacing.unit,\r\n  },\r\n  submit: {\r\n    marginTop: theme.spacing.unit * 3,\r\n  },\r\n});\r\n\r\nclass SignIn extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { redirectToReferrer: false };\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n  }\r\n\r\n  handleSubmit(event) {\r\n    event.preventDefault();\r\n    const data = new FormData(event.target);\r\n\r\n    fetch('/api/login', {\r\n      method: 'POST',\r\n      body: data,\r\n    }).then(\r\n      response => response.status\r\n    ).then(status => {\r\n      if(status===204) {\r\n        sessionHelper.login();\r\n        this.setState({ redirectToReferrer: true });\r\n      }else{\r\n        // TODO: message\r\n        alert(\"Fail!\")\r\n      }\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const { classes } = this.props;\r\n    if(this.state.redirectToReferrer) return <Redirect to=\"/feed\" />;\r\n    return (\r\n      <main className={classes.main}>\r\n        <CssBaseline />\r\n        <Paper className={classes.paper}>\r\n          <Avatar className={classes.avatar}>\r\n          </Avatar>\r\n          <Typography component=\"h1\" variant=\"h5\">\r\n            Sign in\r\n          </Typography>\r\n          <form className={classes.form} onSubmit={this.handleSubmit}>\r\n            <FormControl margin=\"normal\" required fullWidth>\r\n              <InputLabel htmlFor=\"email\">Email Address</InputLabel>\r\n              <Input id=\"email\" name=\"email\" autoComplete=\"email\" autoFocus />\r\n            </FormControl>\r\n            <FormControl margin=\"normal\" required fullWidth>\r\n              <InputLabel htmlFor=\"password\">Password</InputLabel>\r\n              <Input name=\"password\" type=\"password\" id=\"password\" autoComplete=\"current-password\" />\r\n            </FormControl>\r\n            <FormControlLabel\r\n              control={<Checkbox value=\"remember\" color=\"primary\" />}\r\n              label=\"Remember me\"\r\n            />\r\n            <Button\r\n              type=\"submit\"\r\n              fullWidth\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              className={classes.submit}\r\n            >\r\n              Sign in\r\n            </Button>\r\n          </form>\r\n        </Paper>\r\n      </main>\r\n    );\r\n  }\r\n}\r\n\r\nSignIn.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(SignIn);\r\n","import React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nimport { sessionHelper } from '../../helpers/session';\r\nimport { withRouter } from \"react-router-dom\";\r\n\r\nfunction Feed() {\r\n  return (\r\n    <div>\r\n      <h1>Successful</h1>\r\n      <LogoutButton />\r\n    </div>\r\n  )\r\n}\r\n\r\nconst LogoutButton = withRouter(\r\n  ({ history }) =>\r\n    sessionHelper.isLoggedIn() ? (\r\n      <Button\r\n        type=\"submit\"\r\n        variant=\"contained\"\r\n        color=\"primary\"\r\n        onClick={(e)=>{\r\n          e.preventDefault();\r\n          sessionHelper.logout();\r\n          history.push(\"/login\");\r\n        }}\r\n      >\r\n        Sign out\r\n      </Button>\r\n    ) : (\r\n      <Button\r\n        variant=\"contained\"\r\n        color=\"primary\"\r\n      >\r\n        Sign out\r\n      </Button>\r\n    )\r\n);\r\n\r\nexport default Feed;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Input from '@material-ui/core/Input';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport withStyles from '@material-ui/core/styles/withStyles';\r\n\r\nimport { Redirect } from 'react-router'\r\n\r\nconst styles = theme => ({\r\n  main: {\r\n    width: 'auto',\r\n    display: 'block', // Fix IE 11 issue.\r\n    marginLeft: theme.spacing.unit * 3,\r\n    marginRight: theme.spacing.unit * 3,\r\n    [theme.breakpoints.up(400 + theme.spacing.unit * 3 * 2)]: {\r\n      width: 400,\r\n      marginLeft: 'auto',\r\n      marginRight: 'auto',\r\n    },\r\n  },\r\n  paper: {\r\n    marginTop: theme.spacing.unit * 8,\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n    padding: `${theme.spacing.unit * 2}px ${theme.spacing.unit * 3}px ${theme.spacing.unit * 3}px`,\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing.unit,\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  form: {\r\n    width: '100%', // Fix IE 11 issue.\r\n    marginTop: theme.spacing.unit,\r\n  },\r\n  submit: {\r\n    marginTop: theme.spacing.unit * 3,\r\n  },\r\n});\r\n\r\nclass Register extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { redirectToReferrer: false };\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n  }\r\n\r\n  handleSubmit(event) {\r\n    event.preventDefault();\r\n    const data = new FormData(event.target);\r\n    fetch('/api/register', {\r\n      method: 'POST',\r\n      body: data,\r\n    }).then(\r\n      response => response.status\r\n    ).then(status => {\r\n      if(status===204) {\r\n        this.setState({ redirectToReferrer: true });\r\n      }else{\r\n        alert(\"Register Fail!\")\r\n      }\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const { classes } = this.props;\r\n    if(this.state.redirectToReferrer) return <Redirect to=\"/\" />;\r\n    return (\r\n      <main className={classes.main}>\r\n        <CssBaseline />\r\n        <Paper className={classes.paper}>\r\n          <Avatar className={classes.avatar}>\r\n          </Avatar>\r\n          <Typography component=\"h1\" variant=\"h5\">\r\n            Register\r\n          </Typography>\r\n          <form className={classes.form} onSubmit={this.handleSubmit}>\r\n            <FormControl margin=\"normal\" required fullWidth>\r\n              <InputLabel htmlFor=\"email\">Email Address</InputLabel>\r\n              <Input id=\"email\" name=\"email\" autoComplete=\"email\" autoFocus />\r\n            </FormControl>\r\n            <FormControl margin=\"normal\" required fullWidth>\r\n              <InputLabel htmlFor=\"username\">Your Username</InputLabel>\r\n              <Input id=\"username\" name=\"username\" autoComplete=\"username\" autoFocus />\r\n            </FormControl>\r\n            <FormControl margin=\"normal\" required fullWidth>\r\n              <InputLabel htmlFor=\"password\">Password</InputLabel>\r\n              <Input name=\"password\" type=\"password\" id=\"password\" autoComplete=\"current-password\" />\r\n            </FormControl>\r\n\r\n            <FormControlLabel\r\n              control={<Checkbox value=\"remember\" color=\"primary\" />}\r\n              label=\"Remember me\"\r\n            />\r\n            <Button\r\n              type=\"submit\"\r\n              fullWidth\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              className={classes.submit}\r\n            >\r\n              Register\r\n            </Button>\r\n          </form>\r\n        </Paper>\r\n      </main>\r\n    );\r\n  }\r\n}\r\n\r\nRegister.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(Register);\r\n","import React from 'react';\r\nimport { BrowserRouter as Router, Route, Redirect } from 'react-router-dom';\r\nimport SignIn from './components/user/login'\r\nimport Feed from './components/user/feed'\r\nimport Register from './components/user/register'\r\nimport { sessionHelper } from './helpers/session'\r\n\r\nfunction Routes() {\r\n  return (\r\n    <Router>\r\n      <div>\r\n        <Route exact path=\"/login\" component={SignIn} />\r\n        <Route path='/register' component={Register} />\r\n        <PrivateRoute path=\"/feed\" component={Feed} />\r\n      </div>\r\n    </Router>\r\n  )\r\n}\r\n\r\nfunction PrivateRoute({ component: Component, ...rest }) {\r\n  return (\r\n    <Route {...rest}\r\n      render={props =>\r\n        sessionHelper.isLoggedIn() ? (\r\n          <Component {...props} />\r\n        ) : (\r\n          <Redirect\r\n            to={{\r\n              pathname: \"/login\",\r\n              state: { from: props.location }\r\n            }}\r\n          />\r\n        )\r\n      }\r\n    />\r\n  );\r\n}\r\n\r\nexport default Routes;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport Routes from './routes';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<Routes />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}